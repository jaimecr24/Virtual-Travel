version: '3'
services:
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "22181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    ports:
      - "29092:29092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092, PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT, PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  init-kafka:
    container_name: init-kafka
    image: confluentinc/cp-kafka:latest
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:9092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic reservas --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic comandos --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:9092 --list
      "

  pg_backempresa:
    container_name: pg_backempresa
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: contrasena
      POSTGRES_DB: reservas

  pg_backweb:
    container_name: pg_backweb
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: contrasena
      POSTGRES_DB: reservas

  pg_backweb-2:
    container_name: pg_backweb-2
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: contrasena
      POSTGRES_DB: reservas


  backempresa:
    container_name: backempresa
    build:
      context: .
      dockerfile: backempresa\Dockerfile
    environment:
      - server.port=8085
    ports:
      - "8085:8085"
    depends_on:
      - init-kafka
      - pg_backempresa
    links:
      - kafka
      - pg_backempresa

  backweb:
    container_name: backweb
    build:
      context: .
      dockerfile: backweb\Dockerfile
    environment:
      - server.port=8090
      - empresaport=8085
      - datahost=pg_backweb
    ports:
      - "8090:8090"
    depends_on:
      - init-kafka
      - pg_backweb
    links:
      - kafka
      - pg_backweb

  backweb-2:
    container_name: backweb-2
    build:
      context: .
      dockerfile: backweb\Dockerfile
    environment:
      - server.port=8091
      - empresaport=8085
      - datahost=pg_backweb-2
    ports:
      - "8091:8091"
    depends_on:
      - init-kafka
      - pg_backweb-2
    links:
      - kafka
      - pg_backweb-2
